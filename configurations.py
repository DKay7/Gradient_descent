import numpy as np

config = {
    # 'function': lambda x: -1 / ((x[0] - 1)**2 + (x[1] - 1.5)**2 + 1)  # функция для оптимизации,
    # * np.cos(2 * (x[0] - 1)**2 + 2 * (x[1] - 1.5)**2),  # x - массив переменных (их две)
    'function': lambda x: (
            -1 / ((x[0] - 1)**2 + (x[1] - 1.5)**2 + 1)
            * np.cos(2 * (x[0] - 1)**2 + 2 * (x[1] - 1.5)**2)
        ),
    'epsilon': 10 ** -4,  # эпсилон для частных производных
    'alpha': 0.01,  # множитель смещения при спуске
    'max_loop': 10 ** 4,  # максимальное число итераций
    'accuracy': 10 ** -2,  # точность вычисления минимума
    'dots_count': 7,  # число начальных точек, полученных равномерным распределнием в интервале [low, high]
    'fps': 10,  # кадры в секунду для анимации
    'save_frequency': 100,  # частота сохранения кадров
    'low': -3,  # минимум интервала поиска по двум осям
    'high': 3,  # максимум интервала поиска по двум осям
    'c_map': 'jet',  # цветовая карта для построения графика
    'plot_alpha': .4,  # прозрачность графика (чтобы лучше было видно точки)
    'markers': ['D', '*', 'X', 's', 'o', 'H', 'p', '>', '<', '^', 'v'],  # маркеры для точек
    'line_style': '--',  # стиль линий между точками
    'marker_size': 15,  # размер точекна графике
    'shown_dots_start': 0,  # начальная точка из массива точек для анимации
    'shown_dots_end': 7  # конечная точка из массива точек для анимации (не включительно)
}
